import streamlit as st
from openai import OpenAI
from parse_cv_lv_m_i import get_html, extract_vacancy_data
from parse_ss_lv_gpt import get_resume_html, extract_resume_data

client = OpenAI(api_key=st.secrets["OPENAI_API_KEY"])

SYSTEM_PROMPT = """
–ü—Ä–æ–≤–µ—Ä—å —Ä–µ–∑—é–º–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞, –Ω–∞—Å–∫–æ–ª—å–∫–æ –æ–Ω —Ö–æ—Ä–æ—à–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –∫ –¥–∞–Ω–Ω–æ–π –≤–∞–∫–∞–Ω—Å–∏–∏.
–°–Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—à–∏ –∫–æ—Ä–æ—Ç–∫–∏–π –∞–Ω–∞–ª–∏–∑, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø–æ—è—Å–Ω—è—Ç—å –æ—Ü–µ–Ω–∫—É.
–ü–æ—Å—Ç–∞–≤—å –æ—Ü–µ–Ω–∫—É  –∫–∞—á–µ—Å—Ç–≤—É —Ä–µ–∑—é–º–µ –æ—Ç 1 –¥–æ 10. –ò–∑ —Ä–µ–∑—é–º–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–Ω—è—Ç–Ω–æ, 
—Å –∫–∞–∫–∏–º–∏ –∑–∞–¥–∞—á–∞–º–∏ –∏ –ø—Ä–æ–±–ª–µ–º–∞–º–∏ —Å—Ç–∞–ª–∫–∏–≤–∞–ª—Å—è –∫–∞–Ω–¥–∏–¥–∞—Ç –∏ –∫–∞–∫ –∏–º–µ–Ω–Ω–æ –æ–Ω –∏—Ö —Ä–µ—à–∞–ª. –û–ø–∏—Å–∞–Ω—ã –ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è?
–ù–∞–º –≤–∞–∂–Ω–æ –Ω–∞–Ω–∏–º–∞—Ç—å –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —Å–µ—Ä—å–µ–∑–Ω–æ –æ—Ç–Ω–æ—Å—è—Ç—Å—è –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é —Ä–µ–∑—é–º–µ, –∫ –∞–Ω–∞–ª–∏–∑—É —Å–≤–æ–µ–π —Ä–∞–±–æ—Ç—ã –∏ –≤–ª–∏—è–Ω–∏—é –Ω–∞ –∫–æ–º–ø–∞–Ω–∏—é.
–ü–æ—Ç–æ–º –ø–æ—Å—Ç–∞–≤—å –æ—Ü–µ–∫—É —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –≤–∞–∫–∞–Ω—Å–∏–∏ –æ—Ç 1 –¥–æ 10. –ù–∞ —ç—Ç—É –æ—Ü–µ–Ω–∫—É –¥–æ–ª–∂–Ω–∞ –≤–ª–∏—è—Ç—å –æ—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ —Ä–µ–∑—é–º–µ.
–ü–æ—Å—Ç–∞–≤—å –∏—Ç–æ–≥–æ–≤–æ—é –æ—Ü–µ–Ω–∫—É –æ—Ç 0 –¥–æ 10.
""".strip()

def request_gpt(system_prompt, user_prompt):
    response = client.chat.completions.create(
        model="gpt-4.1",
        messages=[
            {"role": "system", "content": system_prompt},  
            {"role": "user", "content": user_prompt},     
        ],
        max_tokens=1000,
        temperature=0,
    )
    return response.choices[0].message.content

st.title('CV Scoring App')

job_description = st.text_area('–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é')
cv = st.text_area('–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ä–µ–∑—é–º–µ')

if st.button("–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ"):
    with st.spinner("–ü–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ GPT..."):
        try:
            job_html = get_html(job_description)
            resume_html = get_resume_html(cv)
            job_text = extract_vacancy_data(job_html)
            resume_text = extract_resume_data(resume_html)
            prompt = f"# –í–ê–ö–ê–ù–°–ò–Ø\n{job_text}\n\n# –†–ï–ó–Æ–ú–ï\n{resume_text}"
            response = request_gpt(SYSTEM_PROMPT, prompt)
            st.subheader("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞:")
            st.markdown(response)
        except Exception as e:
            st.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")